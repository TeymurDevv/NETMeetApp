@model IEnumerable<NETMeetApp.Models.AppUser>

@{
    ViewData["Title"] = "Dashboard";
}

<style>
    .fixed-height {
        position: relative;
        height: 400px;
    }

        .fixed-height canvas {
            display: block;
            width: 100% !important;
            height: 100% !important;
        }
</style>

<div class="row">
    <div class="col-md-6 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <p class="card-title">AppUser's All Roles</p>
                <h4>Student Count: @ViewBag.StudentsCount</h4>
                <h4>Teacher Count: @ViewBag.TeachersCount</h4>
                <h4>Admin Count: @ViewBag.AdminCount</h4>
            </div>
        </div>
    </div>
    <div class="col-lg-6 grid-margin stretch-card">
        <div class="card">
            <div class="card-body fixed-height">
                <h4 class="card-title">User Roles Percentage</h4>
                <canvas id="pieChart"></canvas>
            </div>
        </div>
    </div>
    <div class="col-lg-12 grid-margin stretch-card">
        <div class="card" id="studentTable">
            <div class="card-body">
                <h4 class="card-title">User Table</h4>
                <p class="card-description">
                    Add class <code>.table-striped</code>
                </p>
                <div class="table-responsive">
                    <table id="order-listing" class="table table-striped">
                        <thead>
                            <tr>
                                <th>Profile Image</th>
                                <th>UserName</th>
                                <th>Email</th>
                                <th>Full Name</th>
                                <th>Age</th>
                                <th>Country</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                <tr>
                                    <td class="py-1">
                                        <img src="@user.imageUrl" alt="image" onerror="this.onerror=null; this.src='~/admin/images/faces/face1.jpg';" style="width:50px; height:50px;" />
                                    </td>
                                    <td>@user.UserName</td>
                                    <td>@user.Email</td>
                                    <td>@user.FullName</td>
                                    <td>@user.Age</td>
                                    <td>@user.Country</td>
                                    <td>
                                        @if (user.UserType == NETMeetApp.Enums.UserType.Student)
                                        {
                                            <a asp-area="Admin" asp-controller="Student" asp-action="Detail" asp-route-id="@user.Id" class="btn btn-info btn-sm">Details</a>
                                            <a asp-area="Admin" asp-controller="Student" asp-action="Update" asp-route-id="@user.Id" class="btn btn-primary btn-sm">Edit</a>
                                            <a asp-area="Admin" asp-controller="Student" asp-action="Delete" asp-route-id="@user.Id" class="btn btn-danger btn-sm">Delete</a>
                                        }
                                        else if (user.UserType == NETMeetApp.Enums.UserType.Teacher)
                                        {
                                            <a asp-area="Admin" asp-controller="Teacher" asp-action="Detail" asp-route-id="@user.Id" class="btn btn-info btn-sm">Details</a>
                                            <a asp-area="Admin" asp-controller="Teacher" asp-action="Update" asp-route-id="@user.Id" class="btn btn-primary btn-sm">Edit</a>
                                            <a asp-area="Admin" asp-controller="Teacher" asp-action="Delete" asp-route-id="@user.Id" class="btn btn-danger btn-sm">Delete</a>
                                        }
                                        <!-- Add other UserType conditions as needed -->
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <!-- Remaining HTML for the user table -->
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(function () {
            'use strict';

            var ctx = document.getElementById('pieChart').getContext('2d');

            // Ensure ViewBag values are correctly serialized to JSON
            var studentsCount = @Html.Raw(Json.Serialize(ViewBag.StudentsCount));
            var teachersCount = @Html.Raw(Json.Serialize(ViewBag.TeachersCount));
            var adminCount = @Html.Raw(Json.Serialize(ViewBag.AdminCount));

            // Set up the data for the chart
            var data = {
                labels: ['Students', 'Teachers', 'Admins'],
                datasets: [{
                    data: [studentsCount, teachersCount, adminCount],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.5)',
                        'rgba(54, 162, 235, 0.5)',
                        'rgba(255, 206, 86, 0.5)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)'
                    ],
                    borderWidth: 1
                }]
            };

            // Set up the options for the chart
            var options = {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    position: 'bottom'
                },
                tooltips: {
                    callbacks: {
                        label: function (tooltipItem, data) {
                            var dataset = data.datasets[tooltipItem.datasetIndex];
                            var total = dataset.data.reduce(function (previousValue, currentValue) {
                                return previousValue + currentValue;
                            });
                            var currentValue = dataset.data[tooltipItem.index];
                            var percentage = Math.floor(((currentValue / total) * 100) + 0.5);
                            return data.labels[tooltipItem.index] + ': ' + percentage + '%';
                        }
                    }
                }
            };

            // Initialize the chart
            var pieChart = new Chart(ctx, {
                type: 'pie',
                data: data,
                options: options
            });
        });
    </script>
}
